import streamlit as st
import pandas as pd
from wordcloud import WordCloud
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Pr√©paration et Configuration Initiale
# Titre de la page (WCAG 2.4.2)
st.set_page_config(page_title="R√©sum√© des Analyses CNN", page_icon="üìà")

# Fonction de chargement des donn√©es
@st.cache_data
def load_data():
    return pd.read_csv('cnn_daily_t5.csv')

def generate_boxplot(df):
    # Cr√©er une figure et des axes pour Matplotlib
    fig, ax = plt.subplots(figsize=(10, 6))
    length_data = {
        'Article': df['article'].apply(len),
        'R√©sum√©': df['highlights'].apply(len),
        'R√©sum√© T5': df['t5_summary'].apply(len)
    }
    length_df = pd.DataFrame(length_data)
    sns.boxplot(data=length_df, ax=ax)
    ax.set_title('Comparaison de la longueur des textes')
    ax.set_ylabel('Nombre de caract√®res')
    ax.set_xlabel('Textes')
    # Passer la figure √† Streamlit
    st.pyplot(fig)

def generate_wordcloud(text):
    # Cr√©er une figure pour le nuage de mots
    fig, ax = plt.subplots(figsize=(10, 5))
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)
    ax.imshow(wordcloud, interpolation='bilinear')
    ax.axis('off')  # D√©sactiver les axes pour le nuage de mots
    # Passer la figure √† Streamlit
    st.pyplot(fig)


# 2. Chargement des Donn√©es
df = load_data()

# Titre du tableau de bord
st.title("Dashboard d'analyse des r√©sum√©s CNN")

# Description pour le contenu non textuel (WCAG 1.1.1)
st.markdown("""
    Ce dashboard pr√©sente des analyses sur les r√©sum√©s d'articles du dataset CNN. Les graphiques ci-dessous permettent d'explorer les caract√©ristiques des r√©sum√©s g√©n√©r√©s par diff√©rents mod√®les.
""")

# Ajouter une note sur le contraste des couleurs et le redimensionnement du texte (WCAG 1.4.3, 1.4.4)
st.markdown("""
    **Note:** Vous pouvez zoomer dans les graphiques pour une meilleure lecture, et les couleurs ont √©t√© choisies pour garantir un contraste suffisant.
""")

# Instructions sur la mani√®re de naviguer dans le tableau de bord pour les utilisateurs (accessibilit√©)
st.markdown("""
    **Navigation dans le Dashboard:** Utilisez les widgets sur le c√¥t√© pour filtrer les r√©sultats et interagir avec les graphiques.
""")

# 3. Cr√©ation de Widgets d'Interaction Utilisateur
st.header("Longueur des R√©sum√©s")
generate_boxplot(df)  # Affiche directement le graphique de longueur des r√©sum√©s

st.header("Nuage de Mots des R√©sum√©s")
summary_type = st.radio("Choisissez le type de r√©sum√© :", ('article', 'highlights', 't5_summary'))
if st.button('G√©n√©rer le nuage de mots'):
    all_text = ' '.join(df[summary_type])
    generate_wordcloud(all_text)



    # Initialisation des √©tats de session pour conserver les textes
if 'article_text' not in st.session_state:
    st.session_state.article_text = ""
if 'summary_text' not in st.session_state:
    st.session_state.summary_text = ""

# Titre de la nouvelle section
st.header("Explorer un Article Sp√©cifique")

# Champ de texte pour l'entr√©e de l'utilisateur
user_input = st.text_input("Entrez un num√©ro de ligne entre 1 et {}".format(len(df)), "")

# Fonction pour mettre √† jour le texte de l'article
def show_article():
    line_number = int(user_input) - 1
    st.session_state.article_text = df.loc[line_number, 'article']

# Fonction pour mettre √† jour le texte du r√©sum√© T5
def show_summary():
    line_number = int(user_input) - 1
    st.session_state.summary_text = df.loc[line_number, 't5_summary']

# V√©rification de la validit√© de l'entr√©e de l'utilisateur et affichage des boutons
if user_input.isdigit():
    line_number = int(user_input) - 1
    if 0 <= line_number < len(df):
        # Boutons pour afficher les textes sans annuler l'autre
        if st.button('Afficher Article'):
            show_article()
        if st.button('Afficher R√©sum√© T5'):
            show_summary()
    else:
        st.error("Le num√©ro de ligne doit √™tre entre 1 et {}.".format(len(df)))
else:
    st.error("Veuillez entrer un nombre valide.")

# Zones de texte pour afficher l'article et le r√©sum√©
st.text_area("Article", st.session_state.article_text, height=200)
st.text_area("R√©sum√© T5", st.session_state.summary_text, height=200)




